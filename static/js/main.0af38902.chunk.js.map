{"version":3,"sources":["components/mock1/index.js","components/mock2/index.js","components/mock3/index.js","components/mock4/Header.js","components/mock4/Left.js","components/mock4/Right.js","components/mock4/index.js","components/mock5/FChild.js","components/mock5/CChild.js","components/mock5/index.js","components/mock6/Form.js","components/mock6/Item.js","components/mock6/List.js","components/mock6/index.js","App.js","reportWebVitals.js","index.js"],"names":["Mock","props","ref","React","createRef","state","counter","handleClickMe","bind","console","log","this","setState","className","onClick","Component","useState","setCounter","useRef","useEffect","Header","Left","handleOnClick","Right","count","lCount","setLCount","Child","message","setMessage","useImperativeHandle","setFromOutside","msg","forwardRef","fref","cref","e","current","FChild","CChild","Form","input","value","setValue","handleAdd","focus","onKeyUp","keyCode","type","onChange","target","Item","label","handleDelete","isFirst","handleMoveUp","isLast","handleMoveDown","List","items","map","d","i","title","length","handleMove","setItems","v","push","index","splice","dir","newIndex","App","mock","setMock","mocks","comp","document","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0af38902.chunk.js","sourcesContent":["import './style.scoped.css'\n\nfunction Mock (props) {\n  return (\n    <div>\n      <h1>Scoped CSS</h1>\n      <p>Thanks to craco-plugin-scoped-css</p>\n    </div>\n  )\n}\n\nexport default Mock\n","import React from 'react'\n\nclass Mock extends React.Component {\n  constructor (props) {\n    super(props)\n    this.ref = React.createRef()\n    this.state = { counter: 0 }\n\n    this.handleClickMe = this.handleClickMe.bind(this)\n  }\n\n  componentDidMount () {\n    console.log('componentDidMount')\n    console.log(this.ref)\n  }\n\n  componentWillUnmount () {\n    console.log('componentWillUnmount')\n  }\n\n  componentDidUpdate () {\n    console.log('componentDidUpdate')\n  }\n\n  handleClickMe () {\n    this.setState((state, props) => ({\n      counter: state.counter + 1\n    }))\n  }\n\n  render () {\n    return (\n      <div className='frame'>\n        <h1 ref={this.ref}>Class Component {this.state.counter}</h1>\n        <p>With its internal state and component cycle events</p>\n        <button onClick={this.handleClickMe}>Click Me</button>\n      </div>\n    )\n  }\n}\n\nexport default Mock\n","import { useState, useEffect, useRef } from 'react'\n\nfunction Mock (props) {\n  const [counter, setCounter] = useState(0)\n  const ref = useRef()\n\n  const handleClickMe = () => {\n    setCounter(counter + 1)\n  }\n\n  useEffect(() => {\n    console.log('func mounted')\n    console.log(ref)\n\n    return () => {\n      console.log('func unmounted')\n    }\n  }, [])\n\n  return (\n    <div className='frame'>\n      <h1 ref={ref}>Functional Component {counter}</h1>\n      <p>With its internal state and component cycle events</p>\n      <button onClick={handleClickMe}>Click Me</button>\n    </div>\n  )\n}\n\nexport default Mock\n","import './style.scoped.css'\n\nfunction Header (props) {\n  return (\n    <div className={props.className}>\n      <h1>Component Communication</h1>\n      <p>There is a state in the App that is affected by Left component and that effect is shown in Right component</p>\n    </div>\n  )\n}\n\nexport default Header\n","import './style.scoped.css'\n\nfunction Left (props) {\n  return (\n    <div className={props.className}>\n      <h1>Left</h1>\n      <button onClick={props.handleOnClick}>Click</button>\n    </div>\n  )\n}\n\nexport default Left\n","import './style.scoped.css'\n\nfunction Right (props) {\n  return (\n    <h1 className={props.className}>Right {props.count}</h1>\n  )\n}\n\nexport default Right\n","import './style.scoped.css'\n\nimport { useState } from 'react'\nimport Header from './Header'\nimport Left from './Left'\nimport Right from './Right'\n\nfunction Mock (props) {\n  const [lCount, setLCount] = useState(0)\n\n  const onLeftClicked = () => {\n    setLCount(lCount + 1)\n  }\n\n  return (\n    <div className='frame grid'>\n      <Header className='top' />\n      <Left className='left' handleOnClick={onLeftClicked} />\n      <Right className='right' count={lCount} />\n    </div>\n  )\n}\n\nexport default Mock\n","import { useState, forwardRef, useImperativeHandle } from 'react'\n\nfunction Child (props, ref) {\n  const [message, setMessage] = useState('Func Comp Waiting')\n\n  useImperativeHandle(ref, () => ({\n    setFromOutside (msg) {\n      setMessage(msg)\n    }\n  }), [])\n\n  return (\n    <h1>{message}</h1>\n  )\n}\n\nexport default forwardRef(Child)\n","import React from 'react'\n\nclass Child extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { message: 'Class Comp Waiting' }\n  }\n\n  setFromOutside (msg) {\n    this.setState({ message: msg })\n  }\n\n  render () {\n    return (\n      <h1>{this.state.message}</h1>\n    )\n  }\n}\n\nexport default Child\n","import { useRef } from 'react'\nimport FChild from './FChild'\nimport CChild from './CChild'\n\nfunction Mock (props) {\n  const fref = useRef()\n  const cref = useRef()\n\n  const handleClick = e => {\n    fref.current.setFromOutside('HELLO from Parent')\n    cref.current.setFromOutside('HELLO from Parent')\n  }\n  return (\n    <div className='frame'>\n      <h1>Call a Child Component Method from Parent</h1>\n      <button onClick={handleClick}>Show Me!</button>\n      <FChild ref={fref} />\n      <CChild ref={cref} />\n    </div>\n  )\n}\n\nexport default Mock\n","import { useRef, useState, useEffect } from 'react'\n\nfunction Form (props) {\n  const input = useRef()\n  const [value, setValue] = useState('')\n\n  const handleChange = e => {\n    setValue(e.target.value)\n  }\n\n  const handleAdd = e => {\n    if (value !== '') {\n      setValue('')\n      input.current.focus()\n      props.handleAdd(value)\n    }\n  }\n\n  const handleKeyUp = e => {\n    if (e.keyCode === 13) handleAdd()\n  }\n\n  useEffect(() => {\n    input.current.focus()\n  }, [])\n\n  return (\n    <div>\n      <input onKeyUp={handleKeyUp} ref={input} value={value} type='text' onChange={handleChange} />\n      <button onClick={handleAdd}>Add</button>\n    </div>\n  )\n}\n\nexport default Form\n","\nfunction Item (props) {\n  return (\n    <li>{props.label}\n\n      <button onClick={props.handleDelete}>X</button>\n      {props.isFirst ? '' : <button onClick={props.handleMoveUp}>↑</button>}\n      {props.isLast ? '' : <button onClick={props.handleMoveDown}>↓</button>}\n\n    </li>\n  )\n}\n\nexport default Item\n","import Item from './Item'\n\nfunction List (props) {\n  return (\n    <div>\n      <ul>\n        {props.items.map((d, i) => (\n          <Item\n            key={d.title}\n            label={d.title}\n            isFirst={i === 0}\n            isLast={i === props.items.length - 1}\n            handleDelete={() => props.handleDelete(i)}\n            handleMoveUp={() => props.handleMove(i, 'up')}\n            handleMoveDown={() => props.handleMove(i, 'down')}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default List\n","import Form from './Form'\nimport List from './List'\nimport { useState } from 'react'\n\nfunction Mock (props) {\n  const [items, setItems] = useState([{ title: 'Buy the Milk' }])\n\n  const onHandleAdd = (v) => {\n    items.push({ title: v })\n    setItems([...items])\n  }\n\n  const onHandleDelete = index => {\n    items.splice(index, 1)\n    setItems([...items])\n  }\n\n  const onHandleMove = (index, dir) => {\n    let newIndex = 0\n\n    if (dir === 'up') newIndex = index - 1\n    if (dir === 'down') newIndex = index + 1\n\n    items.splice(newIndex, 0, items.splice(index, 1)[0])\n\n    setItems([...items])\n  }\n\n  return (\n    <div className='frame'>\n      <h1>A Bare-Bones TO-DO list App</h1>\n      <p>There are 3 components, Form, List and Item. The main wrapper handles the state</p>\n      <p>Functions are: add, remove, move items, check if the value is not empty, self focus, keyboard shortcut</p>\n      <Form handleAdd={onHandleAdd} />\n      <List\n        handleDelete={onHandleDelete}\n        handleMove={onHandleMove}\n        items={items}\n      />\n    </div>\n  )\n}\n\nexport default Mock\n","import React, { useState } from 'react'\nimport './App.css'\nimport Mock1 from './components/mock1/'\nimport Mock2 from './components/mock2/'\nimport Mock3 from './components/mock3/'\nimport Mock4 from './components/mock4/'\nimport Mock5 from './components/mock5/'\nimport Mock6 from './components/mock6/'\n\nfunction App () {\n  const [mock, setMock] = useState(5)\n  const mocks = [\n    { label: 'Scoped CSS', comp: <Mock1 /> },\n    { label: 'A Class Component', comp: <Mock2 /> },\n    { label: 'A Functional Component', comp: <Mock3 /> },\n    { label: 'Component communication basic', comp: <Mock4 /> },\n    { label: 'Call Child method from Parent', comp: <Mock5 /> },\n    { label: 'Simple TO-DO List', comp: <Mock6 /> }\n  ]\n\n  const handleChange = (e) => {\n    const index = e.target.value\n    setMock(index)\n    document.title = mocks[index].label\n  }\n\n  return (\n    <div className='app'>\n\n      {mocks[mock].comp}\n\n      <div className='selector'>\n        <select value={mock} onChange={handleChange}>\n          {\n            mocks.map((d, i) => (\n              <option key={d.label} value={i}>{d.label}</option>\n            ))\n          }\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}